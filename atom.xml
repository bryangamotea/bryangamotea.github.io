<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bryan Gamotea's Personal Blog]]></title>
  <link href="http://bryangamotea.github.io/atom.xml" rel="self"/>
  <link href="http://bryangamotea.github.io/"/>
  <updated>2014-01-16T09:57:08+08:00</updated>
  <id>http://bryangamotea.github.io/</id>
  <author>
    <name><![CDATA[Bryan Gamotea]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SASS: Syntactically Awesome Stylesheet]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/16/sass-syntactically-awesome-stylesheet/"/>
    <updated>2014-01-16T09:20:11+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/16/sass-syntactically-awesome-stylesheet</id>
    <content type="html"><![CDATA[<body>
	<p>
		SASS is a css extension that makes writing CSS fun. Not just fun but it makes you work a little bit easier. This is because it has features that lessen the works of the developer. These are the &#8216;magics&#8217; that SASS do:
	</p>

	<h4>Nesting Rule</h4>
	<p>In a regular CSS, you can&#8217;t nest your codes. If you do, there will surely be an error in your code. But in SASS, nesting is allowed. Here&#8217;s an example of SASS nesting rule:</p>

	<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.container {
</span><span class='line'>
</span><span class='line'>		.content {
</span><span class='line'>			height:200px;
</span><span class='line'>			width:200px;
</span><span class='line'>			background-color:black;
</span><span class='line'>		}
</span><span class='line'>
</span><span class='line'>	}</span></code></pre></td></tr></table></div></figure>
	
	<p>and this is how you do it in regular css.</p>
	<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.container .content{
</span><span class='line'>		height:200px;
</span><span class='line'>		width:200px;
</span><span class='line'>		background-color:black;
</span><span class='line'>	}</span></code></pre></td></tr></table></div></figure>

	<p>What I like about nesting is you can see that this particular element is a descendant of this element. Looking at the example, you can edit the properties of .container and .content at the same time because they are at the same block of codes unlike in regular CSS.</p>

	<h4>Variables</h4>
	<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$margin: 0 auto;
</span><span class='line'>	$paragraphColor: #ff0000;</span></code></pre></td></tr></table></div></figure>

	<p>Another feature that helps developer in debugging. Let&#8217;s say you have 30 elements with the same font color of blue. Then in the middle of your work you decided to change it to red. Of course in regular css you&#8217;ll have to do it one by one. But in SASS there is this thing called variables. Like what I did in my example, I stored the color #ff0000 in a variable called $paragraphColor. So with the help of variables, you&#8217;ll no longer have to change a property of an element one by one. All you have to do is change the value of the variable and you&#8217;re done.</p>

</body>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/15/python/"/>
    <updated>2014-01-15T16:34:51+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/15/python</id>
    <content type="html"><![CDATA[<body>
	<h3>Indention is important&#8230;</h3>
	<p>Python is a very unique programming language compared to other languages that I know. Most of the languages I know rarely cares about the indention you made in your code. Yes, proper indention and spacing is a good practice when you&#8217;re a programmer but in Python, indention and spaces are parts of the code itself. &#8220;Wrong indention/spacing == wrong code&#8221; that&#8217;s the Python rule.</p>
</body>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compass]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/12/compass/"/>
    <updated>2014-01-12T12:32:45+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/12/compass</id>
    <content type="html"><![CDATA[<p>If web design is your thing, then you should have a &#8220;Compass&#8221; in your pocket. It&#8217;s not what you think it is so let me just explain myself.</p>

<p>I&#8217;ve been doing a lot of web development for the past month now and learned about this Compass thing(a CSS framework). My OJT supervisor recommend it to us and said that it will make a lot of things easier for us. It does make things easier and it orginizes our files and it works well with SASS.</p>

<h3>What it does&#8230;</h3>
<ol>
	<li>It automatically creates file directory(css,sass, etc)</li>
	<li>Automatically convert SASS to CSS.</li>
	<li>Create sprites</li>
</ol>

<p>That&#8217;s just some of the things that compass do and all you have to do is install it, download the files needed and type this in your terminal(OS X users):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>compass create &lt;projectname>
</span><span class='line'>compass watch</span></code></pre></td></tr></table></div></figure>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixed Octopress... Finally.]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/07/fixed-octopress-dot-dot-dot-finally/"/>
    <updated>2014-01-07T09:17:27+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/07/fixed-octopress-dot-dot-dot-finally</id>
    <content type="html"><![CDATA[<h1>Octopress Fixed</h1>
<p>Finally fixed my octopress blog. Will start blogging for real soon.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Struggle]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/06/the-struggle/"/>
    <updated>2014-01-06T19:45:18+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/06/the-struggle</id>
    <content type="html"><![CDATA[<p><html>
<head></head>
<body></p>

<h1>Still Lost</h1>


<p>I am still finding my way here in octopress. Don&#8217;t know why my first post looks like that but I&#8217;ll figure this out, eventually. Anyway, I learned new things again when I&#8217;m on the process of configuring this blog. Learning new things makes me feel good. And I hope I can fix whatever error/s I&#8217;ve made.</p>


<p></body>
</html></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Post.]]></title>
    <link href="http://bryangamotea.github.io/blog/2014/01/06/my-first-post/"/>
    <updated>2014-01-06T17:37:25+08:00</updated>
    <id>http://bryangamotea.github.io/blog/2014/01/06/my-first-post</id>
    <content type="html"><![CDATA[<p><body></p>

<h1>My First Octopress Post</h1>


<p>My name is Bryan Nikko G. Gamotea. You can call me Bryan or Nikko for short. I&#8217;m a 4th year BSIT student from College of the Immaculate Conception and currently a trainee of Favorite Medium and this is my &#8220;STORY&#8221;. Before we became a trainee here at Favorite Medium, we took a test to see if we are good enough to work for them as trainees. We we&#8217;re given a .jpeg file(a picture) of a web page and asked to copy it and our work should look exactly like the picture. Fortuntely, we passed(barely) the test. Was the test easy? Yes, it looks easy for me, and I did finished it. But when you look at my code back then, first thing you want to say is &#8220;This thing is a mess.&#8221; Before I got here(Favorite Medium), I consider myself as a &#8220;Good&#8221; web developer because I can create simple web pages but after I took that test I can now say that I&#8217;m not even close to &#8220;Good&#8221;. That was one month ago. Being a trainee here in Favorite Medium is not easy because they will bring out the best in you. After weeks of training there&#8217;s no doubt that I&#8217;ve improved from &#8220;nothing&#8221; to &#8220;something&#8221;. Other than developing websites, our other task here is &#8220;learn new things&#8221;. And thaks to that other task, I have learned so many things that I haven&#8217;t learn in school. One important thing that I&#8217;ve learned here is to go beyond your confort zone because staying in it will not give you anything. Currently I&#8217;m way outside of my comfort zone and I can&#8217;t even see where it is now but one thing for sure is it is nice to live outside of it because here&#8217;s where the real fun and learning starts. Just want to thank the Favorite Medium family for giving us this opportunity. It&#8217;s one of the biggest blessing I&#8217;ve recieved. </p>


<p></body></p>
]]></content>
  </entry>
  
</feed>
